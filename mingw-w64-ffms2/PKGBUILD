# Maintainer: Alexey Pavlov <Alexpux@gmail.com>

_realname=ffms2
_variant=${FFMS2_VARIANT:-shared}
pkgbase=mingw-w64-${_realname}
if [[ "$_variant" == "shared-debug" ]]; then
  pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-debug")
elif [[ "$_variant" == "shared-bundled" ]]; then
  pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-bundled")
else
  pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
fi
pkgver=2.40
pkgrel=1
pkgdesc="A cross-platform wrapper library around libav/FFmpeg (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="https://github.com/InitialForce/ffms2/"
license=('MIT')
options=('staticlibs' 'strip')
depends=("${MINGW_PACKAGE_PREFIX}-ffmpeg-if")
makedepends=(
    "${MINGW_PACKAGE_PREFIX}-cc"
    "${MINGW_PACKAGE_PREFIX}-autotools"
    "${MINGW_PACKAGE_PREFIX}-pkgconf"
     unzip
     base-devel
)
source=("${_realname}"::"git+https://github.com/InitialForce/FFMS2#branch=master"
        "0001-ffmsindex-add-municode-ldflag.patch")

sha256sums=('SKIP'
            '59e2150127dbdf2645bab6cbbd8842cc58dd33ce12238e76d1b2916d9d051f56')

prepare() {
  cd "${srcdir}/${_realname}"

  # Skip patch for now - may not be needed with current FFMS2 version
  # patch -Np1 -i "${srcdir}/0001-ffmsindex-add-municode-ldflag.patch"

  mkdir -p src/config
  autoupdate
  autoreconf -fiv
}

build() {
  [[ -d "${srcdir}/build-${MINGW_CHOST}" ]] && rm -rf "${srcdir}/build-${MINGW_CHOST}"
  mkdir -p "${srcdir}/build-${MINGW_CHOST}" && cd "${srcdir}/build-${MINGW_CHOST}"
  
  if [[ "$_variant" == "shared-debug" ]]; then
    ENABLE_VARIANT="--enable-shared --disable-static --enable-debug=yes"
    CFLAGS+=" -O0 -g3 -fno-inline -fno-omit-frame-pointer -fvar-tracking -fvar-tracking-assignments"
    CXXFLAGS+=" -O0 -g3 -fno-inline -fno-omit-frame-pointer -fvar-tracking -fvar-tracking-assignments"
  else
    ENABLE_VARIANT="--enable-shared --disable-static"
  fi

  ../${_realname}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --build=${CARCH%%-*} \
    ${ENABLE_VARIANT}

  make
}

package() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  make DESTDIR="${pkgdir}" install

  install -Dm644 "${srcdir}/${_realname}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"

  # Variant-specific post-processing
  if [[ "$_variant" == "shared-debug" ]]; then
    # Convert symbols for debug variant
    wget "https://github.com/rainers/cv2pdb/releases/download/v0.49/cv2pdb-0.49.zip"
    unzip "cv2pdb-0.49.zip" -d cv2pdb
    pushd "${pkgdir}${MINGW_PREFIX}"/bin/
    for file in *.dll; do $OLDPWD/cv2pdb/cv2pdb.exe $file; done
    popd
    rm -rf cv2pdb*
  elif [[ "$_variant" == "shared-bundled" ]]; then
    # Collect dependencies for bundled variant
    pushd "${pkgdir}${MINGW_PREFIX}"/bin/
    ntldd -R *.dll *.exe |grep -v WINDOWS | grep -v "not found" | grep ${MINGW_ARCH} | column -t | awk '{print $3}' | sed 's|\\|/|g' | xargs cygpath | xargs -I{} cp -u {} .
    popd
  fi
}
